/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &kp Q  &kp W  &kp F             &kp P  &kp G        &kp J      &kp L  &kp U      &kp Y    &kp SEMI  &kp RIGHT_ALT
&kp BSPC   &kp A  &kp R  &kp S             &kp T  &kp D        &kp H      &kp N  &kp E      &kp I    &kp O     &kp APOS
&kp LSHFT  &kp Z  &kp X  &kp C             &kp V  &kp B        &kp K      &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp LEFT_GUI
                         &kp LEFT_CONTROL  &mo 1  &kp ENTER    &kp SPACE  &mo 3  &mo 2
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp GRAVE      &kp N1  &kp N2  &kp N3            &kp N4  &kp N5       &kp N6   &kp N7  &kp N8    &kp N9  &kp N0           &kp BSPC
&kt BACKSPACE  &trans  &trans  &trans            &trans  &trans       &trans   &trans  &trans    &trans  &trans           &kp ENTER
&kp LSHFT      &trans  &trans  &trans            &trans  &trans       &trans   &trans  &trans    &trans  &rgb_ug RGB_TOG  &rgb_ug RGB_EFF
                               &kp LEFT_CONTROL  &trans  &kp SPACE    &kp RET  &trans  &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp ESCAPE     &kp EXCL  &kp AT  &kp HASH          &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
&kp BACKSPACE  &trans    &trans  &trans            &trans    &trans       &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT      &trans    &trans  &trans            &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                                 &kp LEFT_CONTROL  &trans    &kp SPACE    &kp RET    &trans     &kp RALT
            >;
        };

        layer_3 {
            bindings = <
&kp ESCAPE  &trans  &kp HOME        &kp UP_ARROW     &kp END            &trans    &trans  &mkp LCLK       &mmv MOVE_UP    &mkp RCLK        &trans  &trans
&trans      &trans  &kp LEFT_ARROW  &kp DOWN_ARROW   &kp RIGHT_ARROW    &trans    &trans  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &trans  &trans
&trans      &trans  &trans          &kp LC(PAGE_UP)  &kp RC(PAGE_DOWN)  &trans    &trans  &trans          &trans          &trans           &trans  &trans
                                    &trans           &trans             &trans    &trans  &trans          &trans
            >;
        };
    };
};
